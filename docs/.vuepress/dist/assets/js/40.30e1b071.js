(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{428:function(v,t,_){"use strict";_.r(t);var a=_(54),r=Object(a.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"语法二-having与where"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#语法二-having与where"}},[v._v("#")]),v._v(" 语法二：having与where")]),v._v(" "),_("h2",{attrs:{id:"类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[v._v("#")]),v._v(" 类型")]),v._v(" "),_("p",[v._v('"Where"是一个约束声明，在查询数据库的结果返回之前对数据库中的查询条件进行约束，即在结果返回之前起作用，且where后面不能用“聚合函数”')]),v._v(" "),_("p",[v._v("“Having”是一个过滤声明，所谓过滤是在查询数据库的结果返回之后进行过滤，记载结果返回之后起作用，并且having后面可以使用“聚合函数”")]),v._v(" "),_("h2",{attrs:{id:"详情"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#详情"}},[v._v("#")]),v._v(" 详情")]),v._v(" "),_("p",[v._v("having和where都是用来筛选的\nhaving是筛选组二where是筛选记录")]),v._v(" "),_("p",[v._v("他们有各自的区别")]),v._v(" "),_("ol",[_("li",[v._v("当分组筛选的时候用having")]),v._v(" "),_("li",[v._v("其他情况用where")])]),v._v(" "),_("hr"),v._v(" "),_("h2",{attrs:{id:"用having就一定要和group-by连用-用group-by-不一定有having-他知识一个筛选条件用的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#用having就一定要和group-by连用-用group-by-不一定有having-他知识一个筛选条件用的"}},[v._v("#")]),v._v(" 用having就一定要和group by连用，\n用group by 不一定有having（他知识一个筛选条件用的）")]),v._v(" "),_("h2",{attrs:{id:"例子"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[v._v("#")]),v._v(" 例子")]),v._v(" "),_("p",[v._v("表结构：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("部门编号")]),v._v(" "),_("th",[v._v("姓名")]),v._v(" "),_("th",[v._v("工资")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("1")]),v._v(" "),_("td",[v._v("aa")]),v._v(" "),_("td",[v._v("2000")])]),v._v(" "),_("tr",[_("td",[v._v("2")]),v._v(" "),_("td",[v._v("bb")]),v._v(" "),_("td",[v._v("1200")])]),v._v(" "),_("tr",[_("td",[v._v("1")]),v._v(" "),_("td",[v._v("cc")]),v._v(" "),_("td",[v._v("2100")])]),v._v(" "),_("tr",[_("td",[v._v("2")]),v._v(" "),_("td",[v._v("dd")]),v._v(" "),_("td",[v._v("1800")])]),v._v(" "),_("tr",[_("td",[v._v("1")]),v._v(" "),_("td",[v._v("ee")]),v._v(" "),_("td",[v._v("2100")])]),v._v(" "),_("tr",[_("td",[v._v("3")]),v._v(" "),_("td",[v._v("ff")]),v._v(" "),_("td",[v._v("8000")])]),v._v(" "),_("tr",[_("td",[v._v("2")]),v._v(" "),_("td",[v._v("gg")]),v._v(" "),_("td",[v._v("2200")])]),v._v(" "),_("tr",[_("td",[v._v("3")]),v._v(" "),_("td",[v._v("hh")]),v._v(" "),_("td",[v._v("4500")])])])]),v._v(" "),_("p",[v._v("查询有多个员工的工资不低于2000的部门编号（就是说如果一个部门的员工大于2000的人数有两个或两个以上就查询出来）\nselect 部门编号，count("),_("em",[v._v(") from 员工信息表\nwhere 工资>=2000\ngroup by 部门编号\nhaving count(")]),v._v(") > 1\nwhere 针对每一条记录筛选\n而having对同一个部门的分组\ncount(*)>1计算多于两个的部门\n查询结果为:")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("部门编号")]),v._v(" "),_("th",[v._v("员工数")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("1")]),v._v(" "),_("td",[v._v("3")])]),v._v(" "),_("tr",[_("td",[v._v("3")]),v._v(" "),_("td",[v._v("2")])])])]),v._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("where和having的执行级别不同\n在查询过程中聚合语句（sum, min, max, avg, count）要比having子句优先执行，而where子句在查询过程中执行有限级别优先于聚合语句（sum, min, max, avg, count）")]),v._v(" "),_("p",[v._v("having就是来弥补where在分组数据判断时的不足因为where执行优先级别要快于聚合语句")])])}),[],!1,null,null,null);t.default=r.exports}}]);