{"remainingRequest":"/Users/coco/project/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/coco/project/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/coco/project/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/coco/project/blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/coco/project/blog/docs/article/React/文本转换实现.md?vue&type=template&id=0bbf294a&","dependencies":[{"path":"/Users/coco/project/blog/docs/article/React/文本转换实现.md","mtime":1640428465780},{"path":"/Users/coco/project/blog/node_modules/cache-loader/dist/cjs.js","mtime":1639850500127},{"path":"/Users/coco/project/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1639850500593},{"path":"/Users/coco/project/blog/node_modules/cache-loader/dist/cjs.js","mtime":1639850500127},{"path":"/Users/coco/project/blog/node_modules/vue-loader/lib/index.js","mtime":1639850500593},{"path":"/Users/coco/project/blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1640575520631}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoi5paH5pys6L2s5o2i5Li6bWFya2Rvd27lrp7njrAifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiPmlofmnKzovazmjaLkuLptYXJrZG93buWunueOsCJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiDmlofmnKzovazmjaLkuLptYXJrZG93buWunueOsCIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIuWwhuWQjuerr+i/lOWbnueahOaWh+acrOi9rOaNouS4um1hcmtkb3du77yM5pi+56S65Li6SFRNTOmhtemdoiIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6Iui9rOaNouS4um1hcmtkb3duIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIj6L2s5o2i5Li6bWFya2Rvd24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIg6L2s5o2i5Li6bWFya2Rvd24iKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIn0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLFtfdm0uX3YoIi8vbWFya2Rvd24uanNcblxuLy8gaHR0cHM6Ly93d3cuY2hlcnlsZ29vZC5jbi9kZXRhaWwvNWJkYWY0NzIyMzgyYjQ2NDZjMjcxNDNiLmh0bWxcbmNvbnN0IGhpZ2hsaWdodCA9IHJlcXVpcmUoXCJoaWdobGlnaHQuanNcIik7XG5jb25zdCBtYXJrZWQgPSByZXF1aXJlKFwibWFya2VkXCIpO1xuY29uc3QgdG9jT2JqID0ge1xuICBhZGQ6IGZ1bmN0aW9uICh0ZXh0LCBsZXZlbCkge1xuICAgIHZhciBhbmNob3IgPSBgI3RvYyR7bGV2ZWx9JHsrK3RoaXMuaW5kZXh9YDtcbiAgICB0aGlzLnRvYy5wdXNoKHsgYW5jaG9yOiBhbmNob3IsIGxldmVsOiBsZXZlbCwgdGV4dDogdGV4dCB9KTtcbiAgICByZXR1cm4gYW5jaG9yO1xuICB9LFxuICB0b0hUTUw6IGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgbGV2ZWxTdGFjayA9IFtdO1xuICAgIGxldCByZXN1bHQgPSBcIlwiO1xuICAgIGNvbnN0IGFkZFN0YXJ0VUwgPSAoKSA9PiB7XG4gICAgICByZXN1bHQgKz0gJzx1bCBjbGFzcz1cImFuY2hvci11bFwiIGlkPVwiYW5jaG9yLWZpeFwiPic7XG4gICAgfTtcbiAgICBjb25zdCBhZGRFbmRVTCA9ICgpID0+IHtcbiAgICAgIHJlc3VsdCArPSBcIjwvdWw+XFxuXCI7XG4gICAgfTtcbiAgICBjb25zdCBhZGRMSSA9IChhbmNob3IsIHRleHQpID0+IHtcbiAgICAgIHJlc3VsdCArPVxuICAgICAgICAnPGxpPjxhIGNsYXNzPVwidG9jLWxpbmtcIiBocmVmPVwiIycgKyBhbmNob3IgKyAnXCI+JyArIHRleHQgKyBcIjxhPjwvbGk+XFxuXCI7XG4gICAgfTtcblxuICAgIHRoaXMudG9jLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIGxldCBsZXZlbEluZGV4ID0gbGV2ZWxTdGFjay5pbmRleE9mKGl0ZW0ubGV2ZWwpO1xuICAgICAgLy8g5rKh5pyJ5om+5Yiw55u45bqUbGV2ZWznmoR1bOagh+etvu+8jOWImeWwhmxp5pS+5YWl5paw5aKe55qEdWzkuK1cbiAgICAgIGlmIChsZXZlbEluZGV4ID09PSAtMSkge1xuICAgICAgICBsZXZlbFN0YWNrLnVuc2hpZnQoaXRlbS5sZXZlbCk7XG4gICAgICAgIGFkZFN0YXJ0VUwoKTtcbiAgICAgICAgYWRkTEkoaXRlbS5hbmNob3IsIGl0ZW0udGV4dCk7XG4gICAgICB9IC8vIOaJvuWIsOS6huebuOW6lGxldmVs55qEdWzmoIfnrb7vvIzlubbkuJTlnKjmoIjpobbnmoTkvY3nva7liJnnm7TmjqXlsIZsaeaUvuWcqOatpHVs5LiLXG4gICAgICBlbHNlIGlmIChsZXZlbEluZGV4ID09PSAwKSB7XG4gICAgICAgIGFkZExJKGl0ZW0uYW5jaG9yLCBpdGVtLnRleHQpO1xuICAgICAgfSAvLyDmib7liLDkuobnm7jlupRsZXZlbOeahHVs5qCH562+77yM5L2G5piv5LiN5Zyo5qCI6aG25L2N572u77yM6ZyA6KaB5bCG5LmL5YmN55qE5omA5pyJbGV2ZWzlh7rmoIjlubbkuJTmiZPkuIrpl63lkIjmoIfnrb7vvIzmnIDlkI7mlrDlop5saVxuICAgICAgZWxzZSB7XG4gICAgICAgIHdoaWxlIChsZXZlbEluZGV4LS0pIHtcbiAgICAgICAgICBsZXZlbFN0YWNrLnNoaWZ0KCk7XG4gICAgICAgICAgYWRkRW5kVUwoKTtcbiAgICAgICAgfVxuICAgICAgICBhZGRMSShpdGVtLmFuY2hvciwgaXRlbS50ZXh0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICAvLyDlpoLmnpzmoIjkuK3ov5jmnIlsZXZlbO+8jOWFqOmDqOWHuuagiOaJk+S4iumXreWQiOagh+etvlxuICAgIHdoaWxlIChsZXZlbFN0YWNrLmxlbmd0aCkge1xuICAgICAgbGV2ZWxTdGFjay5zaGlmdCgpO1xuICAgICAgYWRkRW5kVUwoKTtcbiAgICB9XG4gICAgdGhpcy50b2MgPSBbXTtcbiAgICB0aGlzLmluZGV4ID0gMDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LFxuICB0b2M6IFtdLFxuICBpbmRleDogMFxufTtcblxuY2xhc3MgTWFya1V0aWxzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5yZW5kZXJlck1EID0gbmV3IG1hcmtlZC5SZW5kZXJlcigpO1xuICAgIHRoaXMucmVuZGVyZXJNRC5oZWFkaW5nID0gZnVuY3Rpb24gKHRleHQsIGxldmVsLCByYXcpIHtcbiAgICAgIHZhciBhbmNob3IgPSB0b2NPYmouYWRkKHRleHQsIGxldmVsKTtcbiAgICAgIHJldHVybiBgPGgke2xldmVsfSBpZD0ke2FuY2hvcn0+JHt0ZXh0fTwvaCR7bGV2ZWx9PlxcbmA7XG4gICAgfTtcbiAgICB0aGlzLnJlbmRlcmVyTUQudGFibGUgPSBmdW5jdGlvbiAoaGVhZGVyLCBib2R5KSB7XG4gICAgICByZXR1cm4gJzx0YWJsZSBjbGFzcz1cInRhYmxlXCIgYm9yZGVyPVwiMFwiIGNlbGxzcGFjaW5nPVwiMFwiIGNlbGxwYWRkaW5nPVwiMFwiPicgKyBoZWFkZXIgKyBib2R5ICsgJzwvdGFibGU+J1xuICAgIH1cbiAgICBoaWdobGlnaHQuY29uZmlndXJlKHsgdXNlQlI6IHRydWUgfSk7XG4gICAgbWFya2VkLnNldE9wdGlvbnMoe1xuICAgICAgcmVuZGVyZXI6IHRoaXMucmVuZGVyZXJNRCxcbiAgICAgIGhlYWRlcklkczogZmFsc2UsXG4gICAgICBnZm06IHRydWUsXG4gICAgICB0YWJsZXM6IHRydWUsXG4gICAgICBicmVha3M6IGZhbHNlLFxuICAgICAgcGVkYW50aWM6IGZhbHNlLFxuICAgICAgc2FuaXRpemU6IGZhbHNlLFxuICAgICAgc21hcnRMaXN0czogdHJ1ZSxcbiAgICAgIHNtYXJ0eXBhbnRzOiBmYWxzZSxcbiAgICAgIGhpZ2hsaWdodDogZnVuY3Rpb24gKGNvZGUpIHtcbiAgICAgICAgcmV0dXJuIGhpZ2hsaWdodC5oaWdobGlnaHRBdXRvKGNvZGUpLnZhbHVlO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgbWFya2VkKGRhdGEpIHtcbiAgICBpZiAoZGF0YSkge1xuICAgICAgbGV0IGNvbnRlbnQgPSBhd2FpdCBtYXJrZWQoZGF0YSk7XG4gICAgICBsZXQgdG9jID0gdG9jT2JqLnRvSFRNTCgpO1xuICAgICAgcmV0dXJuIHsgY29udGVudDogY29udGVudCwgdG9jOiB0b2MgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG59XG5cbmNvbnN0IG1hcmtkb3duID0gbmV3IE1hcmtVdGlscygpO1xuXG5leHBvcnQgZGVmYXVsdCBtYXJrZG93bjtcblxuIildKV0pXSksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6Iuiwg+eUqOi9rOaNoiJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI+iwg+eUqOi9rOaNoiJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiDosIPnlKjovazmjaIiKV0pLF92bS5fdigiICIpLF9jKCdkaXYnLHtzdGF0aWNDbGFzczoibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIn0sW19jKCdwcmUnLHtwcmU6dHJ1ZSxhdHRyczp7ImNsYXNzIjoibGFuZ3VhZ2UtdGV4dCJ9fSxbX2MoJ2NvZGUnLFtfdm0uX3YoIi8vIOWcqOWFtuS7luaWh+S7tuS4reW8leeUqFxuXG5jb25zdCBjb250ZW50bWQgPSBtYXJrZG93bi5tYXJrZWQoY29udGVudCk7XG5jb250ZW50bWQudGhlbihtZCA9PiB7XG4gIC8vIOi/m+S4gOatpeWkhOeQhlxufSnvvJtcbiIpXSldKV0pLF9jKCdoMicse2F0dHJzOnsiaWQiOiLpobXpnaLmuLLmn5PlpITnkIYifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiPpobXpnaLmuLLmn5PlpITnkIYifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIg6aG16Z2i5riy5p+T5aSE55CGIildKSxfdm0uX3YoIiAiKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imxhbmd1YWdlLSBleHRyYS1jbGFzcyJ9LFtfYygncHJlJyx7cHJlOnRydWUsYXR0cnM6eyJjbGFzcyI6Imxhbmd1YWdlLXRleHQifX0sW19jKCdjb2RlJyxbX3ZtLl92KCIvLyDnpLrkvotcbjxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiPlxuICA8ZGl2XG4gICAgaWQ9XCJjb250ZW50XCJcbiAgICBjbGFzc05hbWU9XCJhcnRpY2xlLWRldGFpbFwiXG4gICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tcbiAgICAgIF9faHRtbDogY29udGVudCA/IGNvbnRlbnQgOiBudWxsLFxuICAgIH19XG4gIC8+XG48L2Rpdj5cbiIpXSldKV0pXSl9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}