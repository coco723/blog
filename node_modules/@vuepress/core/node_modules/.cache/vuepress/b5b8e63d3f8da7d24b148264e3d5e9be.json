{"remainingRequest":"/Users/coco/project/blog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/coco/project/blog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/coco/project/blog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/coco/project/blog/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/coco/project/blog/docs/article/README.md?vue&type=template&id=08020ec0&","dependencies":[{"path":"/Users/coco/project/blog/docs/article/README.md","mtime":1640596021739},{"path":"/Users/coco/project/blog/node_modules/cache-loader/dist/cjs.js","mtime":1639850500127},{"path":"/Users/coco/project/blog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1639850500593},{"path":"/Users/coco/project/blog/node_modules/cache-loader/dist/cjs.js","mtime":1639850500127},{"path":"/Users/coco/project/blog/node_modules/vue-loader/lib/index.js","mtime":1639850500593},{"path":"/Users/coco/project/blog/node_modules/@vuepress/markdown-loader/index.js","mtime":1640575520631}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}