{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{522:function(t,a,e){\"use strict\";e.r(a);var s=e(54),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"centos7下yum安装和配置nginx\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#centos7下yum安装和配置nginx\"}},[t._v(\"#\")]),t._v(\" centos7下yum安装和配置Nginx\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"前言\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前言\"}},[t._v(\"#\")]),t._v(\" 前言\")]),t._v(\" \"),e(\"p\",[t._v(\"Nginx (engine x) 是一个高性能的 HTTP 和反向代理服务器，也是一个 IMAP/POP3/SMTP 服务器。。 本例演示 CentOS 7 下安装和配置 Nginx 的基本步骤。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"环境\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#环境\"}},[t._v(\"#\")]),t._v(\" 环境\")]),t._v(\" \"),e(\"p\",[t._v(\"查看Linux环境\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"cat /etc/redhat-release \\nCentOS Linux release 7.6.1810 (Core) \\n\")])])]),e(\"h2\",{attrs:{id:\"步骤\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤\"}},[t._v(\"#\")]),t._v(\" 步骤\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"_1-添加yum源\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-添加yum源\"}},[t._v(\"#\")]),t._v(\" 1. 添加yum源\")]),t._v(\" \"),e(\"p\",[t._v(\"Nginx不在默认的yum源中，可以使用epel或者官网的yum源，本例使用官网的yum源。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm \\n\\nRetrieving http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\\nwarning: /var/tmp/rpm-tmp.SsRR7r: Header V4 RSA/SHA1 Signature, key ID 7bd9bf62: NOKEY\\nPreparing...                          ################################# [100%]\\nUpdating / installing...\\n   1:nginx-release-centos-7-0.el7.ngx ################################# [100%]\\n\")])])]),e(\"p\",[t._v(\"安装yum源之后，可以查看下。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"$ yum repolist\\nLoaded plugins: fastestmirror\\nRepository nodesource is listed more than once in the configuration\\nRepository nodesource-source is listed more than once in the configuration\\nLoading mirror speeds from cached hostfile\\nnginx                                                    | 2.9 kB     00:00     \\nnginx/x86_64/primary_db                                    |  46 kB   00:02     \\nrepo id              repo name                                            status\\nbase/7/x86_64        CentOS-7 - Base                                      10,019\\nepel/x86_64          Extra Packages for Enterprise Linux 7 - x86_64       13,338\\nextras/7/x86_64      CentOS-7 - Extras                                       435\\nnginx/x86_64         nginx repo                                              152\\nnodesource/x86_64    Node.js Packages for Enterprise Linux 7 - x86_64        159\\nupdates/7/x86_64     CentOS-7 - Updates                                    2,500\\nrepolist: 26,603\\n\")])])]),e(\"p\",[t._v(\"可以发现\"),e(\"strong\",[t._v(\"nginx repo\")]),t._v(\"已经安装到本机了。\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"步骤二-安装\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤二-安装\"}},[t._v(\"#\")]),t._v(\" 步骤二：安装\")]),t._v(\" \"),e(\"p\",[t._v(\"yum 安装Nginx，非常简单，一条命令\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"yum install nginx\\n\")])])]),e(\"h3\",{attrs:{id:\"步骤三-配置nginx服务\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤三-配置nginx服务\"}},[t._v(\"#\")]),t._v(\" 步骤三：配置Nginx服务\")]),t._v(\" \"),e(\"p\",[t._v(\"设置开机启动\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"systemctl enable nginx\\n\")])])]),e(\"p\",[t._v(\"启动服务\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"systemctl start nginx\\n\")])])]),e(\"p\",[t._v(\"停止服务\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"systemctl restart nginx\\n\")])])]),e(\"p\",[t._v(\"重新加载，因为一般重新配置之后，不希望重启服务，这时可以使用重新加载。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"systemctl reload nginx\\n\")])])]),e(\"h3\",{attrs:{id:\"步骤四-打开防火墙端口\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤四-打开防火墙端口\"}},[t._v(\"#\")]),t._v(\" 步骤四：打开防火墙端口\")]),t._v(\" \"),e(\"p\",[t._v(\"默认Centos使用的防火墙firewalld是关闭http服务的（打开80端口）\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"$ sudo firewall-cmd --zone=public --permanent --add-service=http\\nsuccess\\n$ sudo firewall-cmd --reload\\nsuccess\\n\")])])]),e(\"p\",[t._v(\"打开之后，可以查看一下防火墙打开的所有服务\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"firewall-cmd --list-service\\n\")])])]),e(\"p\",[t._v(\"可以看到系统已经打开了http服务\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"反向代理\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#反向代理\"}},[t._v(\"#\")]),t._v(\" 反向代理\")]),t._v(\" \"),e(\"p\",[t._v(\"Nginx 是一个很方便的反向代理，配置反向代理可以参考\"),e(\"a\",{attrs:{href:\"http://nginx.org/en/docs/http/ngx_http_proxy_module.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Module ngx_http_proxy_module\"),e(\"OutboundLink\")],1),t._v(\"。本文不做赘述\")]),t._v(\" \"),e(\"p\",[t._v(\"需要指出的是 CentOS 7 的 SELinux，使用反向代理需要打开网络访问权限。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"setsebool httpd_can_network_connect 1 \\n\")])])]),e(\"h2\",{attrs:{id:\"绑定其他端口\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#绑定其他端口\"}},[t._v(\"#\")]),t._v(\" 绑定其他端口\")]),t._v(\" \"),e(\"p\",[t._v(\"Nginx 默认绑定的端口是 http 协议的默认端口，端口号为：80，如果需要绑定其他端口，需要注意 SELinux 的配置\")]),t._v(\" \"),e(\"p\",[t._v(\"例如：绑定 8081 端口，但是会发现无法启动，一般的报错如下\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"YYYY/MM/DD hh:mm:ss [emerg] 46123#0: bind() to 0.0.0.0:8081 failed (13: Permission denied)\\n\")])])]),e(\"p\",[t._v(\"此时需要更改 SELinux 的设置。我们使用 SELinux 的管理工具 semanage 进行操作，比较方便。\")]),t._v(\" \"),e(\"p\",[t._v(\"安装 semanage 使用如下命令\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"yum install policycoreutils-python\\n\")])])]),e(\"p\",[t._v(\"然后查看是否有其他协议类型使用了此端口\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"semanage port -l | grep 8081\\ntransproxy_port_t              tcp      8081\\n\")])])]),e(\"p\",[t._v(\"返回了结果，表明已经被其他类型占用了，类型为 transproxy_port_t。\")]),t._v(\" \"),e(\"p\",[t._v(\"我们还要查看一下 Nginx 的在 SELinux 中的类型 http_port_t 绑定的端口\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"$ sudo semanage port -l | grep http_port_t\\nhttp_port_t                    tcp      80, 81, 443, 488, 8008, 8009, 8443, 9000\\npegasus_http_port_t            tcp      5988\\n\")])])]),e(\"p\",[t._v(\"第一行 http_port_t 中没有包含 8081 这个端口。因此需要修改 8081 端口到 http_port_t 类型中。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"$ sudo semanage port -m -p tcp -t http_port_t 8081\\n\")])])]),e(\"p\",[t._v(\"如果没有其他协议类型使用想要绑定的端口，如 8001，则我们只要新增到 SELinux 中即可。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"$ sudo semanage port -l | grep 8001\\n$ sudo semanage port -a -p tcp -t http_port_t 8001\\n\")])])]),e(\"p\",[t._v(\"此时，重新启动 Nginx 即可。\")]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://qizhanming.com/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"资料\"),e(\"OutboundLink\")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}