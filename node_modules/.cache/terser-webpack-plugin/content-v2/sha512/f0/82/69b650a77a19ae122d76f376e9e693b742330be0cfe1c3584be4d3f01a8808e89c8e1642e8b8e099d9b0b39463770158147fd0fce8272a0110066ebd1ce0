{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{486:function(t,e,s){\"use strict\";s.r(e);var n=s(54),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"项目开发中的规范\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#项目开发中的规范\"}},[t._v(\"#\")]),t._v(\" 项目开发中的规范\")]),t._v(\" \"),s(\"p\",[t._v(\"形成良好统一的代码规范，有利于提高代码的可读性，减少潜在的错误，便于团队写作开发。本问简单介绍JS、CSS、Git Commit的规范工具和用法。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"lint-js\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#lint-js\"}},[t._v(\"#\")]),t._v(\" Lint\u001c JS\")]),t._v(\" \"),s(\"p\",[t._v(\"我们使用\"),s(\"a\",{attrs:{href:\"https://github.com/eslint/eslint\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Eslint\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-安装\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-安装\"}},[t._v(\"#\")]),t._v(\" 1. 安装\")]),t._v(\" \"),s(\"p\",[t._v(\"你可以全局安装\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"npm install eslint -g\\n\")])])]),s(\"p\",[t._v(\"或者也可以在你的项目安装\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"npm install eslint --save-dev\\n\")])])]),s(\"p\",[t._v(\"安装完成后，可在命令行检查下你的代码是否否和规范。如果是全局安装则可以使用\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"eslint your-file\\n\")])])]),s(\"h3\",{attrs:{id:\"_2-配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-配置\"}},[t._v(\"#\")]),t._v(\" 2. 配置\")]),t._v(\" \"),s(\"p\",[t._v(\"通过\"),s(\"code\",[t._v(\"eslint --init\")]),t._v(\"命令可以生成一个配置文件。你也可以自己穿件\"),s(\"code\",[t._v(\".eslintrc.*\")]),t._v(\"文件，或者使用\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"命令检查你的代码时，它会从当前目录开始一层层向上查找是否存在\"),s(\"code\",[t._v(\".eslintrc\")]),t._v(\"文件，直到找到最近的一个\"),s(\"code\",[t._v(\".eslintrc\")]),t._v(\"文件，做诶此次检查的规则。\")]),t._v(\" \"),s(\"p\",[t._v(\"你可以在\"),s(\"a\",{attrs:{href:\"https://github.com/eslint/eslint\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"Eslint\"),s(\"OutboundLink\")],1),t._v(\"官网查看所有配置项\")]),t._v(\" \"),s(\"p\",[t._v(\"目前已经有很多大厂公开了他们的代码规范，也有很多相对应的Eslint插件，我们可以在\"),s(\"code\",[t._v(\".eslintrc\")]),t._v(\"中配置相对应的插件，这样就不用我们动手去添加一个个规则了。\")]),t._v(\" \"),s(\"p\",[t._v(\"以我们目前使用的\"),s(\"code\",[t._v(\"Airbnb\")]),t._v(\"的代码规范为例，他提供了\"),s(\"a\",{attrs:{href:\"https://www.npmjs.com/package/airbnb\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"eslint-config-airbnb-base\"),s(\"OutboundLink\")],1),t._v(\"插件，因此我只需要在项目安装本插件：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"npx install-peerdeps --save-dev eslint-config-airbnb-base\\nor\\nnpm install --save-dev eslint-config-airbnb-base\\n\")])])]),s(\"p\",[t._v(\"并且在\"),s(\"code\",[t._v(\".eslintrc\")]),t._v(\"中配置上这个插件，大功告成！\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('{\\n  \"extends\": [\"airbnb-base\"]\\n}\\n')])])]),s(\"p\",[t._v(\"需要⚠️的一点是，如果你是使用全局命令\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"你的代码，在相应的\"),s(\"code\",[t._v(\".eslintrc\")]),t._v(\"中的\"),s(\"code\",[t._v(\"extends\")]),t._v(\"，\"),s(\"code\",[t._v(\"plugins\")]),t._v(\"都需要在全局安装。否则\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"会找不到相对应的插件。\")]),t._v(\" \"),s(\"p\",[t._v(\"最后，如果你还想对现有的\"),s(\"code\",[t._v(\"airbnb\")]),t._v(\"或者现有其他规则进行配置，则可以在\"),s(\"code\",[t._v(\".eslintrc\")]),t._v(\"中的\"),s(\"code\",[t._v(\"rules\")]),t._v(\"加上相应的配置。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('{\\n  \"extends\": [\"airbnb-base\"],\\n  \"rules\": {\\n    // 你的个性化配置\\n        \"rule-name\": \"\" // 0-off, 1-warn, 2-error\\n  }\\n}\\n\\n')])])]),s(\"p\",[t._v(\"还有一个比较例外的是可以使用以下方式，针对某些文件，重新修改相应规则：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('\"overrides\": [\\n    {\\n      \"files\": [\"*-test.js\",\"*.spec.js\"],\\n      \"rules\": {\\n        \"no-unused-expressions\": \"off\"\\n      }\\n    }\\n  ]\\n')])])]),s(\"h3\",{attrs:{id:\"_3-禁用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-禁用\"}},[t._v(\"#\")]),t._v(\" 3. 禁用\")]),t._v(\" \"),s(\"p\",[t._v(\"但是有些时候有些地方你可能真的需要禁用某些规则，\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"提供了几种禁用方式：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"/* eslint-disable [rules] */\")]),t._v(\"：这行之后的所有代码禁用\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"规则。\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"/* eslint-disable-line [rules] */\")]),t._v(\"：这一行禁用\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"规则\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"/* eslint-disable-next-line [rules] */\")]),t._v(\"： 下一行禁用\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"规则。\")])]),t._v(\" \"),s(\"p\",[t._v(\"其中\"),s(\"code\",[t._v(\"[rules]\")]),t._v(\"是可选的，如果没有\"),s(\"code\",[t._v(\"[rules]\")]),t._v(\"则禁用所有规则，如果有\"),s(\"code\",[t._v(\"[rules]\")]),t._v(\"则禁用指定规则\")]),t._v(\" \"),s(\"p\",[t._v(\"如 \"),s(\"code\",[t._v(\"/* eslint-disable */\")]),t._v(\"则会禁用掉所有规则，\"),s(\"code\",[t._v(\"/* eslint-disable no-console*/\")]),t._v(\" 则只会禁用掉\"),s(\"code\",[t._v(\"no-console\")]),t._v(\"这条规则。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"lint-css\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#lint-css\"}},[t._v(\"#\")]),t._v(\" Lint CSS\")]),t._v(\" \"),s(\"p\",[t._v(\"我选择了\"),s(\"code\",[t._v(\"StyleLint\")]),t._v(\"来规范我的\"),s(\"code\",[t._v(\"CSS\")]),t._v(\"。它可以说和\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"非常像了。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1-安装-2\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-安装-2\"}},[t._v(\"#\")]),t._v(\" 1. 安装\")]),t._v(\" \"),s(\"p\",[t._v(\"同样的，全局或者项目下安装\"),s(\"code\",[t._v(\"stylelint\")]),t._v(\"。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"npm install stylelint -g\\n\")])])]),s(\"p\",[t._v(\"安装完成后，如果是全局安装则可以使用 \"),s(\"code\",[t._v(\"stylelint your-css-file\")]),t._v(\" 检查你的文件。如果是项目内安装则使用：\"),s(\"code\",[t._v(\"./node_modules/.bin/stylelint your-css-file。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-配置-2\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-配置-2\"}},[t._v(\"#\")]),t._v(\" 2. 配置\")]),t._v(\" \"),s(\"p\",[t._v(\"可以通过三种方式对\"),s(\"code\",[t._v(\"stylelint\")]),t._v(\"进行配置：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"package.json\")]),t._v(\"中的\"),s(\"code\",[t._v(\"stylelint\")]),t._v(\"属性\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\".stylelintrc\")]),t._v(\" 文件\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"stylelint.config.js\")]),t._v(\"文件导出一个 JS 对象\")])]),t._v(\" \"),s(\"p\",[t._v(\"和 \"),s(\"code\",[t._v(\"ESLint\")]),t._v(\"一样，我们可以在\"),s(\"code\",[t._v(\"extends\")]),t._v(\"中指定第三方插件，\"),s(\"code\",[t._v(\"rules\")]),t._v(\"来配置对应的规则。这里我们还是继续使用Airbnb CSS 规范。\")]),t._v(\" \"),s(\"p\",[t._v(\"安装\"),s(\"a\",{attrs:{href:\"https://github.com/airbnb/css\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"stylelint-config-airbnb\"),s(\"OutboundLink\")],1),t._v(\"：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"npm install stylelint-config-airbnb\\n\")])])]),s(\"p\",[t._v(\"在配置文件中声明：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('{  \"extends\": \"stylelint-config-airbnb\"}\\n')])])]),s(\"p\",[t._v(\"注意，如果你的.stylelintrc文件是在根目录下，则extends的路径需要写成绝对路径，比如：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('{\\n  \"extends\": \"/usr/local/lib/node_modules/stylelint-config-airbnb\"\\n}\\n')])])]),s(\"p\",[t._v(\"最后，运行\"),s(\"code\",[t._v(\"stylelint your-css-file\")]),t._v(\"就可以出现规范检查结果啦！\"),s(\"code\",[t._v(\"stylelint\")]),t._v(\"默认会支持\"),s(\"code\",[t._v(\"css,scss,less\")]),t._v(\"所以你也不用担心哦~\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"禁用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#禁用\"}},[t._v(\"#\")]),t._v(\" 禁用\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"stylelint\")]),t._v(\" 的规则也和 \"),s(\"code\",[t._v(\"ESLint\")]),t._v(\"一样。所以如果熟悉了\"),s(\"code\",[t._v(\"ESLint\")]),t._v(\"， \"),s(\"code\",[t._v(\"stylelint\")]),t._v(\"真的可是说是无缝上手哦~\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"lint-commit\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#lint-commit\"}},[t._v(\"#\")]),t._v(\" Lint Commit\")]),t._v(\" \"),s(\"p\",[t._v(\"在这一步我会进行两步操作：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"检查前2步的ESLint，stylelint 是否全部通过；\")]),t._v(\" \"),s(\"li\",[t._v(\"提交的commit信息是否符合规范。\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1-使用githooks检查代码规范是否通过\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-使用githooks检查代码规范是否通过\"}},[t._v(\"#\")]),t._v(\" 1. 使用\"),s(\"code\",[t._v(\"githooks\")]),t._v(\"检查代码规范是否通过\")]),t._v(\" \"),s(\"p\",[t._v(\"我们使用\"),s(\"a\",{attrs:{href:\"https://github.com/typicode/husky\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"husky\"),s(\"OutboundLink\")],1),t._v(\"来管理我们的\"),s(\"code\",[t._v(\"githooks\")]),t._v(\"。在安装\"),s(\"code\",[t._v(\"husky\")]),t._v(\"之前，请确保你的项目已经\"),s(\"code\",[t._v(\"git init\")]),t._v(\"了。\")]),t._v(\" \"),s(\"p\",[t._v(\"安装\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"husky:npm install husky --save-dev\\n\")])])]),s(\"p\",[t._v(\"在\"),s(\"code\",[t._v(\"package.json\")]),t._v(\"中定义我们需要的钩子及执行的命令：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('{\\n    \"scripts\": {\\n    \"lint:es\": \"eslint\", // lint js\\n    \"lint:css\": \"stylelint src/**/*.css\", // lint css\\n    \"lint:all\": \"npm-run-all lint:es lint:css\" // lint es, css\\n  },\\n  \"husky\": {\\n    \"hooks\": {\\n      \"pre-commit\": \"npm run lint:all\",\\n    }\\n  }\\n}\\n\\n')])])]),s(\"p\",[t._v(\"在这里我们分别定义了\"),s(\"code\",[t._v(\"lint:es\")]),t._v(\"和\"),s(\"code\",[t._v(\"lint:css\")]),t._v(\"两个命令来检测代码规范。你可以分别运行这两个命令。也可以定义一个命令同时运行这两个命令，我在这里使用了\"),s(\"code\",[t._v(\"npm-run-all\")]),t._v(\"：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"npm install npm-run-all --save-dev\\n\")])])]),s(\"p\",[t._v(\"我们定义了在\"),s(\"code\",[t._v(\"pre-commit\")]),t._v(\"钩子触发时会执行\"),s(\"code\",[t._v(\"npm run lint:all\")]),t._v(\"命令。\"),s(\"code\",[t._v(\"pre-commit\")]),t._v(\"钩子会在\"),s(\"code\",[t._v(\"git commit\")]),t._v(\"时触发，如果\"),s(\"code\",[t._v(\"lint:all\")]),t._v(\"没有通过，则本次\"),s(\"code\",[t._v(\"commit\")]),t._v(\"会失败。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2-使用commintlint检查-commit-信息是否符合规范\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-使用commintlint检查-commit-信息是否符合规范\"}},[t._v(\"#\")]),t._v(\" 2.  使用\"),s(\"a\",{attrs:{href:\"https://github.com/conventional-changelog/commitlint\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"commintlint\"),s(\"OutboundLink\")],1),t._v(\"检查 \"),s(\"code\",[t._v(\"commit\")]),t._v(\" 信息是否符合规范\")]),t._v(\" \"),s(\"p\",[s(\"a\",{attrs:{href:\"https://commitlint.js.org/#/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"官网\"),s(\"OutboundLink\")],1)]),t._v(\" \"),s(\"p\",[t._v(\"在这里，我们使用阮老师这篇文章中提到的 \"),s(\"code\",[t._v(\"git\")]),t._v(\" 提交规范， 大致是：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"<type>(<scope>): <subject>\\n// 空一行\\n<body>\\n// 空一行\\n<footer>\\n\")])])]),s(\"p\",[t._v(\"其中，\"),s(\"code\",[t._v(\"type\")]),t._v(\" 可选项为：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"feat：新功能（feature）\\nfix：修补bug\\ndocs：文档（documentation）\\nstyle： 格式（不影响代码运行的变动）\\nrefactor：重构（即不是新增功能，也不是修改bug的代码变动）\\ntest：增加测试\\nchore：构建过程或辅助工具的变动\\n\")])])]),s(\"p\",[t._v(\"安装\"),s(\"code\",[t._v(\"commitlint\")]),t._v(\"， 以及相对应的\"),s(\"code\",[t._v(\"commit\")]),t._v(\"规范。和\"),s(\"code\",[t._v(\"eslint\")]),t._v(\"一样，\"),s(\"code\",[t._v(\"commitlint\")]),t._v(\"为我们提供检测功能，同时他也有不同的插件来对应不同的规范风格。你可以在这里查看大家分享出来的相应规范的配置。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"npm install --save-dev @commitlint/{config-conventional,cli}\\n\")])])]),s(\"p\",[t._v(\"生成配置文件：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"  echo \\\"module.exports = {extends: ['@commitlint/config-conventional']}\\\" > commitlint.config.js\\n\")])])]),s(\"p\",[t._v(\"它也支持多种文件格式的配置文件:\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"Configuration is picked up from\\ncommitlint.config.js,\\n.commitlintrc.js,\\n.commitlintrc.json,\\n or\\n.commitlintrc.yml file\\nor\\na commitlint field in package.json\\n\")])])]),s(\"p\",[t._v(\"并且常用的配置项也与ESlint很相似：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('  {\\n      \"extends\": [\\'@commitlint/config-conventional\\'], // 扩展的规则集\\n      \"rules\": {\\n          // commitmsg 的自定义规则\\n      }\\n  }\\n\\n')])])]),s(\"p\",[t._v(\"这时候你就可以检查你要提交的commit信息是否符合规范了：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('echo \"foo\" | npx commitlint\\n')])])]),s(\"p\",[t._v(\"不过这样很鸡肋，我要先commit一次要提交的信息，通过了，再用这条消息提交一次。我们完全可以在githooks时来解决这个问题：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v('{\\n    \"scripts\": {\\n        \"commitmsg\": \"commitlint -e GIT_PARAMS\"\\n    },\\n    \"husky\": {\\n    \"hooks\": {\\n      \"pre-commit\": \"npm run lint:all\",\\n      \"commit-msg\": \"npm run commitmsg\"\\n    }\\n  }\\n}\\n\\n')])])]),s(\"p\",[t._v(\"在这里和\"),s(\"code\",[t._v(\"githooks\")]),t._v(\"同时使用时需要加上\"),s(\"code\",[t._v(\"GIT_PARAMS\")]),t._v(\"这个环境变量。我们在\"),s(\"code\",[t._v(\"commit-msg\")]),t._v(\"这个钩子时调用\"),s(\"code\",[t._v(\"npm run commitmsg\")]),t._v(\" 来判断\"),s(\"code\",[t._v(\"commit\")]),t._v(\"信息是否符合规范。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_3-使用commitizen来填写commit-msg\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-使用commitizen来填写commit-msg\"}},[t._v(\"#\")]),t._v(\" 3. 使用\"),s(\"a\",{attrs:{href:\"https://github.com/commitizen/cz-cli\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"commitizen\"),s(\"OutboundLink\")],1),t._v(\"来填写commit msg\")]),t._v(\" \"),s(\"p\",[t._v('安装commitizen及其adapater : npm install -g commitizen cz-conventional-changelog\\n全局安装adapater: echo \\'{ \"path\": \"cz-conventional-changelog\" }\\' > ~/.czr\\n安装完成后，使用 git cz 代替 git commit -m 来填写 commit msg，会出现一个交互式工具：')]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"https://upload-images.jianshu.io/upload_images/9403248-7de090484949922a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\",alt:\"\"}})]),t._v(\" \"),s(\"p\",[t._v(\"OK。完成以上三步之后我们的git 工作流变成了：\")]),t._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"git add .\\ngit cz\\n\")])])]),s(\"p\",[t._v(\"然后就会检查我们的eslint, stylelint, commitlint。这样，当你提交成功时，你的JS, CSS , Commit Msg 也是完全符合规范的哦~\")])])}),[],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}